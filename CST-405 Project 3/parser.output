Terminals unused in grammar

    END
    COLON
    INT
    FLOAT
    MULT


Rules useless in parser due to conflicts

   62 Stmt: IF LPAR Expr EQ Expr RPAR LBRA


State 1 conflicts: 1 reduce/reduce
State 10 conflicts: 1 reduce/reduce
State 18 conflicts: 1 reduce/reduce
State 27 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce
State 30 conflicts: 9 reduce/reduce
State 34 conflicts: 1 shift/reduce
State 51 conflicts: 8 reduce/reduce
State 70 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 127 conflicts: 13 shift/reduce
State 139 conflicts: 14 shift/reduce
State 158 conflicts: 9 shift/reduce
State 163 conflicts: 1 shift/reduce
State 165 conflicts: 2 shift/reduce
State 171 conflicts: 1 shift/reduce
State 175 conflicts: 8 shift/reduce
State 181 conflicts: 1 shift/reduce
State 183 conflicts: 8 shift/reduce
State 188 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FuncDeclList MainFunc
    2        | error

    3 $@1: ε

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA

    5 Body: VarDeclList StmtList
    6     | error

    7 FuncDeclList: ε
    8             | FuncDecl FuncDeclList
    9             | error

   10 $@2: ε

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA
   12         | error

   13 FuncCall: ID LPAR ExprList RPAR

   14 ParamList: ε
   15          | ParamDecl
   16          | ParamDecl COMMA ParamList
   17          | error

   18 ParamDecl: TYPE ID
   19          | error

   20 VarDeclList: ε
   21            | VarDecl VarDeclList
   22            | error

   23 VarDecl: TYPE ID SEMICOLON
   24        | TYPE ID EQ Expr SEMICOLON
   25        | Array_Decl SEMICOLON
   26        | Array_Decl EQ LBRA ExprList RBRA SEMICOLON
   27        | TYPE ID
   28        | TYPE ID EQ Expr
   29        | TYPE NUMBER
   30        | error

   31 StmtList: ε
   32         | Stmt StmtList

   33 Stmt: ID EQ Expr SEMICOLON
   34     | ID EQ FuncCall SEMICOLON
   35     | FuncCall SEMICOLON
   36     | Array EQ Expr SEMICOLON
   37     | ID EQ Expr
   38     | WRITE Expr SEMICOLON
   39     | WRITE Expr
   40     | WRITE LPAR Expr RPAR SEMICOLON
   41     | WRITE Array SEMICOLON
   42     | WRITE LPAR Expr RPAR
   43     | PRINT Expr SEMICOLON
   44     | PRINT Expr
   45     | PRINT LPAR Expr RPAR SEMICOLON
   46     | PRINT LPAR Expr RPAR
   47     | IF LPAR Expr RPAR LBRA Stmt RBRA
   48     | IF LPAR Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   49     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA RBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ Expr RPAR LBRA Stmt
   56     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr EQ Expr RPAR LBRA
   63     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   64     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA
   65     | WHILE LPAR Expr RPAR LBRA RBRA
   66     | WHILE LPAR Expr EQ Expr RPAR LBRA RBRA
   67     | WHILE LPAR Expr RPAR LBRA Stmt RBRA
   68     | WHILE LPAR Expr EQ Expr RPAR LBRA Stmt RBRA
   69     | RETURN LPAR Expr RPAR SEMICOLON
   70     | RETURN Expr SEMICOLON
   71     | error

   72 ExprList: Expr
   73         | Expr COMMA ExprList

   74 Expr: Expr BinOp Expr
   75     | LPAR Expr BinOp Expr RPAR
   76     | ID
   77     | NUMBER
   78     | DECIMAL_NUMBER
   79     | BOOL
   80     | STR
   81     | CHR
   82     | error

   83 Array_Decl: TYPE ID LBLO NUMBER RBLO
   84           | TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA

   85 Array: ID LBLO NUMBER RBLO

   86 BinOp: PLUS
   87      | MINUS
   88      | MUL
   89      | DIV
   90      | POW
   91      | FAC
   92      | FIB
   93      | PEQ
   94      | SEQ
   95      | MEQ
   96      | DEQ
   97      | DUP
   98      | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 6 9 12 17 19 22 30 71 82 98
    TYPE <string> (258) 11 18 23 24 27 28 29 83 84
    VOID <string> (259) 4
    FUNC_DECL <string> (260) 4 11
    MAIN <string> (261) 4
    BOOL <string> (262) 79
    ID <string> (263) 11 13 18 23 24 27 28 33 34 37 76 83 84 85
    NUMBER <number> (264) 29 77 83 84 85
    DECIMAL_NUMBER <float_number> (265) 78
    STR <string> (266) 80
    CHR <string> (267) 81
    END <string> (268)
    LPAR <char> (269) 4 11 13 40 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 75
    RPAR <char> (270) 4 11 13 40 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 75
    LBRA <char> (271) 4 11 26 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 84
    RBRA <char> (272) 4 11 26 47 48 49 50 51 52 53 54 56 57 58 59 60 61 63 64 65 66 67 68 84
    LBLO <char> (273) 83 84 85
    RBLO <char> (274) 83 84 85
    SEMICOLON <char> (275) 23 24 25 26 33 34 35 36 38 40 41 43 45 69 70
    COLON <char> (276)
    COMMA <char> (277) 16 73
    EQ <operator> (278) 24 26 28 33 34 36 37 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 66 68 84
    PEQ <operator> (279) 93
    SEQ <operator> (280) 94
    MEQ <operator> (281) 95
    DEQ <operator> (282) 96
    DUP <operator> (283) 97
    PLUS <operator> (284) 86
    MINUS <operator> (285) 87
    MUL <operator> (286) 88
    DIV <operator> (287) 89
    POW <operator> (288) 90
    FAC <operator> (289) 91
    FIB <operator> (290) 92
    WRITE <string> (291) 38 39 40 41 42
    PRINT <string> (292) 43 44 45 46
    IF <string> (293) 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    ELSE <string> (294) 48 50 51 52 54 56 57 58 59 60 61 63 64
    RETURN <string> (295) 69 70
    WHILE <string> (296) 65 66 67 68
    INT <string> (297)
    FLOAT <string> (298)
    MULT (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program <ast> (46)
        on left: 1 2
        on right: 0
    MainFunc <ast> (47)
        on left: 4
        on right: 1
    $@1 (48)
        on left: 3
        on right: 4
    Body <ast> (49)
        on left: 5 6
        on right: 4 11
    FuncDeclList <ast> (50)
        on left: 7 8 9
        on right: 1 8
    FuncDecl <ast> (51)
        on left: 11 12
        on right: 8
    $@2 (52)
        on left: 10
        on right: 11
    FuncCall <ast> (53)
        on left: 13
        on right: 34 35
    ParamList <ast> (54)
        on left: 14 15 16 17
        on right: 11 16
    ParamDecl <ast> (55)
        on left: 18 19
        on right: 15 16
    VarDeclList <ast> (56)
        on left: 20 21 22
        on right: 5 21
    VarDecl <ast> (57)
        on left: 23 24 25 26 27 28 29 30
        on right: 21
    StmtList <ast> (58)
        on left: 31 32
        on right: 5 32
    Stmt <ast> (59)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 32 47 48 49 50 51 52 55 56 57 58 59 60 61 67 68
    ExprList <ast> (60)
        on left: 72 73
        on right: 13 26 73 84
    Expr <ast> (61)
        on left: 74 75 76 77 78 79 80 81 82
        on right: 24 28 33 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 72 73 74 75
    Array_Decl <ast> (62)
        on left: 83 84
        on right: 25 26
    Array <ast> (63)
        on left: 85
        on right: 36 41
    BinOp <ast> (64)
        on left: 86 87 88 89 90 91 92 93 94 95 96 97 98
        on right: 74 75


State 0

    0 $accept: • Program $end

    error      shift, and go to state 1
    FUNC_DECL  shift, and go to state 2

    VOID  reduce using rule 7 (FuncDeclList)

    Program       go to state 3
    FuncDeclList  go to state 4
    FuncDecl      go to state 5


State 1

    2 Program: error •
    9 FuncDeclList: error •
   12 FuncDecl: error •

    $end      reduce using rule 2 (Program)
    VOID      reduce using rule 9 (FuncDeclList)
    VOID      [reduce using rule 12 (FuncDecl)]
    $default  reduce using rule 12 (FuncDecl)


State 2

   11 FuncDecl: FUNC_DECL • TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA

    TYPE  shift, and go to state 6


State 3

    0 $accept: Program • $end

    $end  shift, and go to state 7


State 4

    1 Program: FuncDeclList • MainFunc

    VOID  shift, and go to state 8

    MainFunc  go to state 9


State 5

    8 FuncDeclList: FuncDecl • FuncDeclList

    error      shift, and go to state 10
    FUNC_DECL  shift, and go to state 2

    VOID  reduce using rule 7 (FuncDeclList)

    FuncDeclList  go to state 11
    FuncDecl      go to state 5


State 6

   11 FuncDecl: FUNC_DECL TYPE • ID $@2 LPAR ParamList RPAR LBRA Body RBRA

    ID  shift, and go to state 12


State 7

    0 $accept: Program $end •

    $default  accept


State 8

    4 MainFunc: VOID • FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA

    FUNC_DECL  shift, and go to state 13


State 9

    1 Program: FuncDeclList MainFunc •

    $default  reduce using rule 1 (Program)


State 10

    9 FuncDeclList: error •
   12 FuncDecl: error •

    VOID      reduce using rule 9 (FuncDeclList)
    VOID      [reduce using rule 12 (FuncDecl)]
    $default  reduce using rule 12 (FuncDecl)


State 11

    8 FuncDeclList: FuncDecl FuncDeclList •

    $default  reduce using rule 8 (FuncDeclList)


State 12

   11 FuncDecl: FUNC_DECL TYPE ID • $@2 LPAR ParamList RPAR LBRA Body RBRA

    $default  reduce using rule 10 ($@2)

    $@2  go to state 14


State 13

    4 MainFunc: VOID FUNC_DECL • MAIN $@1 LPAR RPAR LBRA Body RBRA

    MAIN  shift, and go to state 15


State 14

   11 FuncDecl: FUNC_DECL TYPE ID $@2 • LPAR ParamList RPAR LBRA Body RBRA

    LPAR  shift, and go to state 16


State 15

    4 MainFunc: VOID FUNC_DECL MAIN • $@1 LPAR RPAR LBRA Body RBRA

    $default  reduce using rule 3 ($@1)

    $@1  go to state 17


State 16

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR • ParamList RPAR LBRA Body RBRA

    error  shift, and go to state 18
    TYPE   shift, and go to state 19

    RPAR  reduce using rule 14 (ParamList)

    ParamList  go to state 20
    ParamDecl  go to state 21


State 17

    4 MainFunc: VOID FUNC_DECL MAIN $@1 • LPAR RPAR LBRA Body RBRA

    LPAR  shift, and go to state 22


State 18

   17 ParamList: error •
   19 ParamDecl: error •

    RPAR      reduce using rule 17 (ParamList)
    RPAR      [reduce using rule 19 (ParamDecl)]
    COMMA     reduce using rule 19 (ParamDecl)
    $default  reduce using rule 17 (ParamList)


State 19

   18 ParamDecl: TYPE • ID

    ID  shift, and go to state 23


State 20

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList • RPAR LBRA Body RBRA

    RPAR  shift, and go to state 24


State 21

   15 ParamList: ParamDecl •
   16          | ParamDecl • COMMA ParamList

    COMMA  shift, and go to state 25

    $default  reduce using rule 15 (ParamList)


State 22

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR • RPAR LBRA Body RBRA

    RPAR  shift, and go to state 26


State 23

   18 ParamDecl: TYPE ID •

    $default  reduce using rule 18 (ParamDecl)


State 24

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR • LBRA Body RBRA

    LBRA  shift, and go to state 27


State 25

   16 ParamList: ParamDecl COMMA • ParamList

    error  shift, and go to state 18
    TYPE   shift, and go to state 19

    RPAR  reduce using rule 14 (ParamList)

    ParamList  go to state 28
    ParamDecl  go to state 21


State 26

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR • LBRA Body RBRA

    LBRA  shift, and go to state 29


State 27

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA • Body RBRA

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 32
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 28

   16 ParamList: ParamDecl COMMA ParamList •

    $default  reduce using rule 16 (ParamList)


State 29

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA • Body RBRA

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 36
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 30

    6 Body: error •
   22 VarDeclList: error •
   30 VarDecl: error •

    error     reduce using rule 22 (VarDeclList)
    error     [reduce using rule 30 (VarDecl)]
    TYPE      reduce using rule 30 (VarDecl)
    ID        reduce using rule 22 (VarDeclList)
    ID        [reduce using rule 30 (VarDecl)]
    RBRA      reduce using rule 6 (Body)
    RBRA      [reduce using rule 22 (VarDeclList)]
    RBRA      [reduce using rule 30 (VarDecl)]
    WRITE     reduce using rule 22 (VarDeclList)
    WRITE     [reduce using rule 30 (VarDecl)]
    PRINT     reduce using rule 22 (VarDeclList)
    PRINT     [reduce using rule 30 (VarDecl)]
    IF        reduce using rule 22 (VarDeclList)
    IF        [reduce using rule 30 (VarDecl)]
    RETURN    reduce using rule 22 (VarDeclList)
    RETURN    [reduce using rule 30 (VarDecl)]
    WHILE     reduce using rule 22 (VarDeclList)
    WHILE     [reduce using rule 30 (VarDecl)]
    $default  reduce using rule 22 (VarDeclList)


State 31

   23 VarDecl: TYPE • ID SEMICOLON
   24        | TYPE • ID EQ Expr SEMICOLON
   27        | TYPE • ID
   28        | TYPE • ID EQ Expr
   29        | TYPE • NUMBER
   83 Array_Decl: TYPE • ID LBLO NUMBER RBLO
   84           | TYPE • ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 38


State 32

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body • RBRA

    RBRA  shift, and go to state 39


State 33

    5 Body: VarDeclList • StmtList

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    RBRA  reduce using rule 31 (StmtList)

    FuncCall  go to state 47
    StmtList  go to state 48
    Stmt      go to state 49
    Array     go to state 50


State 34

   21 VarDeclList: VarDecl • VarDeclList

    error  shift, and go to state 51
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    VarDeclList  go to state 52
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 35

   25 VarDecl: Array_Decl • SEMICOLON
   26        | Array_Decl • EQ LBRA ExprList RBRA SEMICOLON

    SEMICOLON  shift, and go to state 53
    EQ         shift, and go to state 54


State 36

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body • RBRA

    RBRA  shift, and go to state 55


State 37

   23 VarDecl: TYPE ID • SEMICOLON
   24        | TYPE ID • EQ Expr SEMICOLON
   27        | TYPE ID •
   28        | TYPE ID • EQ Expr
   83 Array_Decl: TYPE ID • LBLO NUMBER RBLO
   84           | TYPE ID • LBLO NUMBER RBLO EQ LBRA ExprList RBRA

    LBLO       shift, and go to state 56
    SEMICOLON  shift, and go to state 57
    EQ         shift, and go to state 58

    $default  reduce using rule 27 (VarDecl)


State 38

   29 VarDecl: TYPE NUMBER •

    $default  reduce using rule 29 (VarDecl)


State 39

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA •

    $default  reduce using rule 11 (FuncDecl)


State 40

   71 Stmt: error •

    $default  reduce using rule 71 (Stmt)


State 41

   13 FuncCall: ID • LPAR ExprList RPAR
   33 Stmt: ID • EQ Expr SEMICOLON
   34     | ID • EQ FuncCall SEMICOLON
   37     | ID • EQ Expr
   85 Array: ID • LBLO NUMBER RBLO

    LPAR  shift, and go to state 59
    LBLO  shift, and go to state 60
    EQ    shift, and go to state 61


State 42

   38 Stmt: WRITE • Expr SEMICOLON
   39     | WRITE • Expr
   40     | WRITE • LPAR Expr RPAR SEMICOLON
   41     | WRITE • Array SEMICOLON
   42     | WRITE • LPAR Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 64
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 69

    Expr   go to state 70
    Array  go to state 71


State 43

   43 Stmt: PRINT • Expr SEMICOLON
   44     | PRINT • Expr
   45     | PRINT • LPAR Expr RPAR SEMICOLON
   46     | PRINT • LPAR Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 73

    Expr  go to state 74


State 44

   47 Stmt: IF • LPAR Expr RPAR LBRA Stmt RBRA
   48     | IF • LPAR Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   49     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA
   50     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA
   54     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt
   56     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF • LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF • LPAR Expr EQ Expr RPAR LBRA
   63     | IF • LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   64     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA

    LPAR  shift, and go to state 75


State 45

   69 Stmt: RETURN • LPAR Expr RPAR SEMICOLON
   70     | RETURN • Expr SEMICOLON

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 76

    Expr  go to state 77


State 46

   65 Stmt: WHILE • LPAR Expr RPAR LBRA RBRA
   66     | WHILE • LPAR Expr EQ Expr RPAR LBRA RBRA
   67     | WHILE • LPAR Expr RPAR LBRA Stmt RBRA
   68     | WHILE • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA

    LPAR  shift, and go to state 78


State 47

   35 Stmt: FuncCall • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 48

    5 Body: VarDeclList StmtList •

    $default  reduce using rule 5 (Body)


State 49

   32 StmtList: Stmt • StmtList

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    RBRA  reduce using rule 31 (StmtList)

    FuncCall  go to state 47
    StmtList  go to state 80
    Stmt      go to state 49
    Array     go to state 50


State 50

   36 Stmt: Array • EQ Expr SEMICOLON

    EQ  shift, and go to state 81


State 51

   22 VarDeclList: error •
   30 VarDecl: error •

    error     reduce using rule 22 (VarDeclList)
    error     [reduce using rule 30 (VarDecl)]
    TYPE      reduce using rule 30 (VarDecl)
    ID        reduce using rule 22 (VarDeclList)
    ID        [reduce using rule 30 (VarDecl)]
    RBRA      reduce using rule 22 (VarDeclList)
    RBRA      [reduce using rule 30 (VarDecl)]
    WRITE     reduce using rule 22 (VarDeclList)
    WRITE     [reduce using rule 30 (VarDecl)]
    PRINT     reduce using rule 22 (VarDeclList)
    PRINT     [reduce using rule 30 (VarDecl)]
    IF        reduce using rule 22 (VarDeclList)
    IF        [reduce using rule 30 (VarDecl)]
    RETURN    reduce using rule 22 (VarDeclList)
    RETURN    [reduce using rule 30 (VarDecl)]
    WHILE     reduce using rule 22 (VarDeclList)
    WHILE     [reduce using rule 30 (VarDecl)]
    $default  reduce using rule 22 (VarDeclList)


State 52

   21 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 21 (VarDeclList)


State 53

   25 VarDecl: Array_Decl SEMICOLON •

    $default  reduce using rule 25 (VarDecl)


State 54

   26 VarDecl: Array_Decl EQ • LBRA ExprList RBRA SEMICOLON

    LBRA  shift, and go to state 82


State 55

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA •

    $default  reduce using rule 4 (MainFunc)


State 56

   83 Array_Decl: TYPE ID LBLO • NUMBER RBLO
   84           | TYPE ID LBLO • NUMBER RBLO EQ LBRA ExprList RBRA

    NUMBER  shift, and go to state 83


State 57

   23 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 23 (VarDecl)


State 58

   24 VarDecl: TYPE ID EQ • Expr SEMICOLON
   28        | TYPE ID EQ • Expr

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 85


State 59

   13 FuncCall: ID LPAR • ExprList RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    ExprList  go to state 86
    Expr      go to state 87


State 60

   85 Array: ID LBLO • NUMBER RBLO

    NUMBER  shift, and go to state 88


State 61

   33 Stmt: ID EQ • Expr SEMICOLON
   34     | ID EQ • FuncCall SEMICOLON
   37     | ID EQ • Expr

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 89
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    FuncCall  go to state 90
    Expr      go to state 91


State 62

   82 Expr: error •

    $default  reduce using rule 82 (Expr)


State 63

   79 Expr: BOOL •

    $default  reduce using rule 79 (Expr)


State 64

   76 Expr: ID •
   85 Array: ID • LBLO NUMBER RBLO

    LBLO  shift, and go to state 60

    $default  reduce using rule 76 (Expr)


State 65

   77 Expr: NUMBER •

    $default  reduce using rule 77 (Expr)


State 66

   78 Expr: DECIMAL_NUMBER •

    $default  reduce using rule 78 (Expr)


State 67

   80 Expr: STR •

    $default  reduce using rule 80 (Expr)


State 68

   81 Expr: CHR •

    $default  reduce using rule 81 (Expr)


State 69

   40 Stmt: WRITE LPAR • Expr RPAR SEMICOLON
   42     | WRITE LPAR • Expr RPAR
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 92


State 70

   38 Stmt: WRITE Expr • SEMICOLON
   39     | WRITE Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 94
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    error   [reduce using rule 39 (Stmt)]
    ID      reduce using rule 39 (Stmt)
    RBRA    reduce using rule 39 (Stmt)
    WRITE   reduce using rule 39 (Stmt)
    PRINT   reduce using rule 39 (Stmt)
    IF      reduce using rule 39 (Stmt)
    ELSE    reduce using rule 39 (Stmt)
    RETURN  reduce using rule 39 (Stmt)
    WHILE   reduce using rule 39 (Stmt)

    BinOp  go to state 107


State 71

   41 Stmt: WRITE Array • SEMICOLON

    SEMICOLON  shift, and go to state 108


State 72

   76 Expr: ID •

    $default  reduce using rule 76 (Expr)


State 73

   45 Stmt: PRINT LPAR • Expr RPAR SEMICOLON
   46     | PRINT LPAR • Expr RPAR
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 109


State 74

   43 Stmt: PRINT Expr • SEMICOLON
   44     | PRINT Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 110
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    error   [reduce using rule 44 (Stmt)]
    ID      reduce using rule 44 (Stmt)
    RBRA    reduce using rule 44 (Stmt)
    WRITE   reduce using rule 44 (Stmt)
    PRINT   reduce using rule 44 (Stmt)
    IF      reduce using rule 44 (Stmt)
    ELSE    reduce using rule 44 (Stmt)
    RETURN  reduce using rule 44 (Stmt)
    WHILE   reduce using rule 44 (Stmt)

    BinOp  go to state 107


State 75

   47 Stmt: IF LPAR • Expr RPAR LBRA Stmt RBRA
   48     | IF LPAR • Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   49     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA
   50     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA
   54     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt
   56     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR • Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR • Expr EQ Expr RPAR LBRA
   63     | IF LPAR • Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   64     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 111


State 76

   69 Stmt: RETURN LPAR • Expr RPAR SEMICOLON
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 112


State 77

   70 Stmt: RETURN Expr • SEMICOLON
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 113
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    BinOp  go to state 107


State 78

   65 Stmt: WHILE LPAR • Expr RPAR LBRA RBRA
   66     | WHILE LPAR • Expr EQ Expr RPAR LBRA RBRA
   67     | WHILE LPAR • Expr RPAR LBRA Stmt RBRA
   68     | WHILE LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 114


State 79

   35 Stmt: FuncCall SEMICOLON •

    $default  reduce using rule 35 (Stmt)


State 80

   32 StmtList: Stmt StmtList •

    $default  reduce using rule 32 (StmtList)


State 81

   36 Stmt: Array EQ • Expr SEMICOLON

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 115


State 82

   26 VarDecl: Array_Decl EQ LBRA • ExprList RBRA SEMICOLON

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    ExprList  go to state 116
    Expr      go to state 87


State 83

   83 Array_Decl: TYPE ID LBLO NUMBER • RBLO
   84           | TYPE ID LBLO NUMBER • RBLO EQ LBRA ExprList RBRA

    RBLO  shift, and go to state 117


State 84

   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 118


State 85

   24 VarDecl: TYPE ID EQ Expr • SEMICOLON
   28        | TYPE ID EQ Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 119
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    error   [reduce using rule 28 (VarDecl)]
    TYPE    reduce using rule 28 (VarDecl)
    ID      reduce using rule 28 (VarDecl)
    RBRA    reduce using rule 28 (VarDecl)
    WRITE   reduce using rule 28 (VarDecl)
    PRINT   reduce using rule 28 (VarDecl)
    IF      reduce using rule 28 (VarDecl)
    RETURN  reduce using rule 28 (VarDecl)
    WHILE   reduce using rule 28 (VarDecl)

    BinOp  go to state 107


State 86

   13 FuncCall: ID LPAR ExprList • RPAR

    RPAR  shift, and go to state 120


State 87

   72 ExprList: Expr •
   73         | Expr • COMMA ExprList
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 93
    COMMA  shift, and go to state 121
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    RPAR  reduce using rule 72 (ExprList)
    RBRA  reduce using rule 72 (ExprList)

    BinOp  go to state 107


State 88

   85 Array: ID LBLO NUMBER • RBLO

    RBLO  shift, and go to state 122


State 89

   13 FuncCall: ID • LPAR ExprList RPAR
   76 Expr: ID •

    LPAR  shift, and go to state 59

    $default  reduce using rule 76 (Expr)


State 90

   34 Stmt: ID EQ FuncCall • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 91

   33 Stmt: ID EQ Expr • SEMICOLON
   37     | ID EQ Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 124
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    error   [reduce using rule 37 (Stmt)]
    ID      reduce using rule 37 (Stmt)
    RBRA    reduce using rule 37 (Stmt)
    WRITE   reduce using rule 37 (Stmt)
    PRINT   reduce using rule 37 (Stmt)
    IF      reduce using rule 37 (Stmt)
    ELSE    reduce using rule 37 (Stmt)
    RETURN  reduce using rule 37 (Stmt)
    WHILE   reduce using rule 37 (Stmt)

    BinOp  go to state 107


State 92

   40 Stmt: WRITE LPAR Expr • RPAR SEMICOLON
   42     | WRITE LPAR Expr • RPAR
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 93
    RPAR   shift, and go to state 125
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 126


State 93

   98 BinOp: error •

    $default  reduce using rule 98 (BinOp)


State 94

   38 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 38 (Stmt)


State 95

   93 BinOp: PEQ •

    $default  reduce using rule 93 (BinOp)


State 96

   94 BinOp: SEQ •

    $default  reduce using rule 94 (BinOp)


State 97

   95 BinOp: MEQ •

    $default  reduce using rule 95 (BinOp)


State 98

   96 BinOp: DEQ •

    $default  reduce using rule 96 (BinOp)


State 99

   97 BinOp: DUP •

    $default  reduce using rule 97 (BinOp)


State 100

   86 BinOp: PLUS •

    $default  reduce using rule 86 (BinOp)


State 101

   87 BinOp: MINUS •

    $default  reduce using rule 87 (BinOp)


State 102

   88 BinOp: MUL •

    $default  reduce using rule 88 (BinOp)


State 103

   89 BinOp: DIV •

    $default  reduce using rule 89 (BinOp)


State 104

   90 BinOp: POW •

    $default  reduce using rule 90 (BinOp)


State 105

   91 BinOp: FAC •

    $default  reduce using rule 91 (BinOp)


State 106

   92 BinOp: FIB •

    $default  reduce using rule 92 (BinOp)


State 107

   74 Expr: Expr BinOp • Expr

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 127


State 108

   41 Stmt: WRITE Array SEMICOLON •

    $default  reduce using rule 41 (Stmt)


State 109

   45 Stmt: PRINT LPAR Expr • RPAR SEMICOLON
   46     | PRINT LPAR Expr • RPAR
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 93
    RPAR   shift, and go to state 128
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 126


State 110

   43 Stmt: PRINT Expr SEMICOLON •

    $default  reduce using rule 43 (Stmt)


State 111

   47 Stmt: IF LPAR Expr • RPAR LBRA Stmt RBRA
   48     | IF LPAR Expr • RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   49     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA
   50     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA
   54     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt
   56     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr • EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr • EQ Expr RPAR LBRA
   63     | IF LPAR Expr • EQ Expr RPAR LBRA ELSE LBRA RBRA
   64     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 93
    RPAR   shift, and go to state 129
    EQ     shift, and go to state 130
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 107


State 112

   69 Stmt: RETURN LPAR Expr • RPAR SEMICOLON
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 93
    RPAR   shift, and go to state 131
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 126


State 113

   70 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 70 (Stmt)


State 114

   65 Stmt: WHILE LPAR Expr • RPAR LBRA RBRA
   66     | WHILE LPAR Expr • EQ Expr RPAR LBRA RBRA
   67     | WHILE LPAR Expr • RPAR LBRA Stmt RBRA
   68     | WHILE LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 93
    RPAR   shift, and go to state 132
    EQ     shift, and go to state 133
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 107


State 115

   36 Stmt: Array EQ Expr • SEMICOLON
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 93
    SEMICOLON  shift, and go to state 134
    PEQ        shift, and go to state 95
    SEQ        shift, and go to state 96
    MEQ        shift, and go to state 97
    DEQ        shift, and go to state 98
    DUP        shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    MUL        shift, and go to state 102
    DIV        shift, and go to state 103
    POW        shift, and go to state 104
    FAC        shift, and go to state 105
    FIB        shift, and go to state 106

    BinOp  go to state 107


State 116

   26 VarDecl: Array_Decl EQ LBRA ExprList • RBRA SEMICOLON

    RBRA  shift, and go to state 135


State 117

   83 Array_Decl: TYPE ID LBLO NUMBER RBLO •
   84           | TYPE ID LBLO NUMBER RBLO • EQ LBRA ExprList RBRA

    EQ  shift, and go to state 136

    EQ        [reduce using rule 83 (Array_Decl)]
    $default  reduce using rule 83 (Array_Decl)


State 118

   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 93
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 126


State 119

   24 VarDecl: TYPE ID EQ Expr SEMICOLON •

    $default  reduce using rule 24 (VarDecl)


State 120

   13 FuncCall: ID LPAR ExprList RPAR •

    $default  reduce using rule 13 (FuncCall)


State 121

   73 ExprList: Expr COMMA • ExprList

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    ExprList  go to state 137
    Expr      go to state 87


State 122

   85 Array: ID LBLO NUMBER RBLO •

    $default  reduce using rule 85 (Array)


State 123

   34 Stmt: ID EQ FuncCall SEMICOLON •

    $default  reduce using rule 34 (Stmt)


State 124

   33 Stmt: ID EQ Expr SEMICOLON •

    $default  reduce using rule 33 (Stmt)


State 125

   40 Stmt: WRITE LPAR Expr RPAR • SEMICOLON
   42     | WRITE LPAR Expr RPAR •

    SEMICOLON  shift, and go to state 138

    $default  reduce using rule 42 (Stmt)


State 126

   74 Expr: Expr BinOp • Expr
   75     | LPAR Expr BinOp • Expr RPAR

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 139


State 127

   74 Expr: Expr • BinOp Expr
   74     | Expr BinOp Expr •

    error  shift, and go to state 93
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    error      [reduce using rule 74 (Expr)]
    TYPE       reduce using rule 74 (Expr)
    ID         reduce using rule 74 (Expr)
    RPAR       reduce using rule 74 (Expr)
    RBRA       reduce using rule 74 (Expr)
    SEMICOLON  reduce using rule 74 (Expr)
    COMMA      reduce using rule 74 (Expr)
    EQ         reduce using rule 74 (Expr)
    PEQ        [reduce using rule 74 (Expr)]
    SEQ        [reduce using rule 74 (Expr)]
    MEQ        [reduce using rule 74 (Expr)]
    DEQ        [reduce using rule 74 (Expr)]
    DUP        [reduce using rule 74 (Expr)]
    PLUS       [reduce using rule 74 (Expr)]
    MINUS      [reduce using rule 74 (Expr)]
    MUL        [reduce using rule 74 (Expr)]
    DIV        [reduce using rule 74 (Expr)]
    POW        [reduce using rule 74 (Expr)]
    FAC        [reduce using rule 74 (Expr)]
    FIB        [reduce using rule 74 (Expr)]
    WRITE      reduce using rule 74 (Expr)
    PRINT      reduce using rule 74 (Expr)
    IF         reduce using rule 74 (Expr)
    ELSE       reduce using rule 74 (Expr)
    RETURN     reduce using rule 74 (Expr)
    WHILE      reduce using rule 74 (Expr)

    BinOp  go to state 107


State 128

   45 Stmt: PRINT LPAR Expr RPAR • SEMICOLON
   46     | PRINT LPAR Expr RPAR •

    SEMICOLON  shift, and go to state 140

    $default  reduce using rule 46 (Stmt)


State 129

   47 Stmt: IF LPAR Expr RPAR • LBRA Stmt RBRA
   48     | IF LPAR Expr RPAR • LBRA RBRA ELSE LBRA Stmt RBRA

    LBRA  shift, and go to state 141


State 130

   49 Stmt: IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA
   50     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA
   54     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt
   56     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr EQ • Expr RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr EQ • Expr RPAR LBRA
   63     | IF LPAR Expr EQ • Expr RPAR LBRA ELSE LBRA RBRA
   64     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 142


State 131

   69 Stmt: RETURN LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 132

   65 Stmt: WHILE LPAR Expr RPAR • LBRA RBRA
   67     | WHILE LPAR Expr RPAR • LBRA Stmt RBRA

    LBRA  shift, and go to state 144


State 133

   66 Stmt: WHILE LPAR Expr EQ • Expr RPAR LBRA RBRA
   68     | WHILE LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    Expr  go to state 145


State 134

   36 Stmt: Array EQ Expr SEMICOLON •

    $default  reduce using rule 36 (Stmt)


State 135

   26 VarDecl: Array_Decl EQ LBRA ExprList RBRA • SEMICOLON

    SEMICOLON  shift, and go to state 146


State 136

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ • LBRA ExprList RBRA

    LBRA  shift, and go to state 147


State 137

   73 ExprList: Expr COMMA ExprList •

    $default  reduce using rule 73 (ExprList)


State 138

   40 Stmt: WRITE LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 40 (Stmt)


State 139

   74 Expr: Expr • BinOp Expr
   74     | Expr BinOp Expr •
   75     | LPAR Expr BinOp Expr • RPAR

    error  shift, and go to state 93
    RPAR   shift, and go to state 148
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    error  [reduce using rule 74 (Expr)]
    RPAR   [reduce using rule 74 (Expr)]
    PEQ    [reduce using rule 74 (Expr)]
    SEQ    [reduce using rule 74 (Expr)]
    MEQ    [reduce using rule 74 (Expr)]
    DEQ    [reduce using rule 74 (Expr)]
    DUP    [reduce using rule 74 (Expr)]
    PLUS   [reduce using rule 74 (Expr)]
    MINUS  [reduce using rule 74 (Expr)]
    MUL    [reduce using rule 74 (Expr)]
    DIV    [reduce using rule 74 (Expr)]
    POW    [reduce using rule 74 (Expr)]
    FAC    [reduce using rule 74 (Expr)]
    FIB    [reduce using rule 74 (Expr)]

    BinOp  go to state 107


State 140

   45 Stmt: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 45 (Stmt)


State 141

   47 Stmt: IF LPAR Expr RPAR LBRA • Stmt RBRA
   48     | IF LPAR Expr RPAR LBRA • RBRA ELSE LBRA Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 149
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 150
    Array     go to state 50


State 142

   49 Stmt: IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA
   54     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt
   56     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr EQ Expr • RPAR LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr EQ Expr • RPAR LBRA
   63     | IF LPAR Expr EQ Expr • RPAR LBRA ELSE LBRA RBRA
   64     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 93
    RPAR   shift, and go to state 151
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 107


State 143

   69 Stmt: RETURN LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 69 (Stmt)


State 144

   65 Stmt: WHILE LPAR Expr RPAR LBRA • RBRA
   67     | WHILE LPAR Expr RPAR LBRA • Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 152
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 153
    Array     go to state 50


State 145

   66 Stmt: WHILE LPAR Expr EQ Expr • RPAR LBRA RBRA
   68     | WHILE LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 93
    RPAR   shift, and go to state 154
    PEQ    shift, and go to state 95
    SEQ    shift, and go to state 96
    MEQ    shift, and go to state 97
    DEQ    shift, and go to state 98
    DUP    shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    MUL    shift, and go to state 102
    DIV    shift, and go to state 103
    POW    shift, and go to state 104
    FAC    shift, and go to state 105
    FIB    shift, and go to state 106

    BinOp  go to state 107


State 146

   26 VarDecl: Array_Decl EQ LBRA ExprList RBRA SEMICOLON •

    $default  reduce using rule 26 (VarDecl)


State 147

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA • ExprList RBRA

    error           shift, and go to state 62
    BOOL            shift, and go to state 63
    ID              shift, and go to state 72
    NUMBER          shift, and go to state 65
    DECIMAL_NUMBER  shift, and go to state 66
    STR             shift, and go to state 67
    CHR             shift, and go to state 68
    LPAR            shift, and go to state 84

    ExprList  go to state 155
    Expr      go to state 87


State 148

   75 Expr: LPAR Expr BinOp Expr RPAR •

    $default  reduce using rule 75 (Expr)


State 149

   48 Stmt: IF LPAR Expr RPAR LBRA RBRA • ELSE LBRA Stmt RBRA

    ELSE  shift, and go to state 156


State 150

   47 Stmt: IF LPAR Expr RPAR LBRA Stmt • RBRA

    RBRA  shift, and go to state 157


State 151

   49 Stmt: IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA
   54     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt
   56     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr EQ Expr RPAR • LBRA ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr EQ Expr RPAR • LBRA
   63     | IF LPAR Expr EQ Expr RPAR • LBRA ELSE LBRA RBRA
   64     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA

    LBRA  shift, and go to state 158


State 152

   65 Stmt: WHILE LPAR Expr RPAR LBRA RBRA •

    $default  reduce using rule 65 (Stmt)


State 153

   67 Stmt: WHILE LPAR Expr RPAR LBRA Stmt • RBRA

    RBRA  shift, and go to state 159


State 154

   66 Stmt: WHILE LPAR Expr EQ Expr RPAR • LBRA RBRA
   68     | WHILE LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA

    LBRA  shift, and go to state 160


State 155

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList • RBRA

    RBRA  shift, and go to state 161


State 156

   48 Stmt: IF LPAR Expr RPAR LBRA RBRA ELSE • LBRA Stmt RBRA

    LBRA  shift, and go to state 162


State 157

   47 Stmt: IF LPAR Expr RPAR LBRA Stmt RBRA •

    $default  reduce using rule 47 (Stmt)


State 158

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt
   56     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt ELSE LBRA RBRA
   59     | IF LPAR Expr EQ Expr RPAR LBRA • ELSE LBRA Stmt RBRA
   60     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA Stmt
   62     | IF LPAR Expr EQ Expr RPAR LBRA •
   63     | IF LPAR Expr EQ Expr RPAR LBRA • ELSE LBRA RBRA
   64     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 163
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    ELSE    shift, and go to state 164
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 62 (Stmt)]
    ID      [reduce using rule 62 (Stmt)]
    RBRA    [reduce using rule 62 (Stmt)]
    WRITE   [reduce using rule 62 (Stmt)]
    PRINT   [reduce using rule 62 (Stmt)]
    IF      [reduce using rule 62 (Stmt)]
    ELSE    [reduce using rule 62 (Stmt)]
    RETURN  [reduce using rule 62 (Stmt)]
    WHILE   [reduce using rule 62 (Stmt)]

    FuncCall  go to state 47
    Stmt      go to state 165
    Array     go to state 50


State 159

   67 Stmt: WHILE LPAR Expr RPAR LBRA Stmt RBRA •

    $default  reduce using rule 67 (Stmt)


State 160

   66 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA • RBRA
   68     | WHILE LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 166
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 167
    Array     go to state 50


State 161

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA •

    $default  reduce using rule 84 (Array_Decl)


State 162

   48 Stmt: IF LPAR Expr RPAR LBRA RBRA ELSE LBRA • Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 168
    Array     go to state 50


State 163

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA RBRA •
   54     | IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA RBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA Stmt
   64     | IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA

    ELSE  shift, and go to state 169

    ELSE      [reduce using rule 53 (Stmt)]
    $default  reduce using rule 53 (Stmt)


State 164

   59 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE • LBRA Stmt RBRA
   63     | IF LPAR Expr EQ Expr RPAR LBRA ELSE • LBRA RBRA

    LBRA  shift, and go to state 170


State 165

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA RBRA
   55     | IF LPAR Expr EQ Expr RPAR LBRA Stmt •
   56     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • ELSE LBRA Stmt RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA Stmt
   58     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • ELSE LBRA RBRA
   60     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA

    RBRA  shift, and go to state 171
    ELSE  shift, and go to state 172

    RBRA      [reduce using rule 55 (Stmt)]
    ELSE      [reduce using rule 55 (Stmt)]
    $default  reduce using rule 55 (Stmt)


State 166

   66 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA RBRA •

    $default  reduce using rule 66 (Stmt)


State 167

   68 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA

    RBRA  shift, and go to state 173


State 168

   48 Stmt: IF LPAR Expr RPAR LBRA RBRA ELSE LBRA Stmt • RBRA

    RBRA  shift, and go to state 174


State 169

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA Stmt RBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA RBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA Stmt
   64     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA

    LBRA  shift, and go to state 175


State 170

   59 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA • Stmt RBRA
   63     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA • RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 176
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 177
    Array     go to state 50


State 171

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA •
   50     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA Stmt
   60     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 49 (Stmt)]
    $default  reduce using rule 49 (Stmt)


State 172

   56 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE • LBRA Stmt RBRA
   58     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE • LBRA RBRA

    LBRA  shift, and go to state 179


State 173

   68 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA Stmt RBRA •

    $default  reduce using rule 68 (Stmt)


State 174

   48 Stmt: IF LPAR Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA •

    $default  reduce using rule 48 (Stmt)


State 175

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA • Stmt RBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA • RBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA • Stmt
   64     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA •

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 180
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 64 (Stmt)]
    ID      [reduce using rule 64 (Stmt)]
    RBRA    [reduce using rule 64 (Stmt)]
    WRITE   [reduce using rule 64 (Stmt)]
    PRINT   [reduce using rule 64 (Stmt)]
    IF      [reduce using rule 64 (Stmt)]
    ELSE    reduce using rule 64 (Stmt)
    RETURN  [reduce using rule 64 (Stmt)]
    WHILE   [reduce using rule 64 (Stmt)]

    FuncCall  go to state 47
    Stmt      go to state 181
    Array     go to state 50


State 176

   63 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA •

    $default  reduce using rule 63 (Stmt)


State 177

   59 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt • RBRA

    RBRA  shift, and go to state 182


State 178

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA Stmt
   60     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA

    LBRA  shift, and go to state 183


State 179

   56 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA • Stmt RBRA
   58     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA • RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 184
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall  go to state 47
    Stmt      go to state 185
    Array     go to state 50


State 180

   54 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA RBRA •

    $default  reduce using rule 54 (Stmt)


State 181

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt • RBRA
   61     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt •

    RBRA  shift, and go to state 186

    RBRA      [reduce using rule 61 (Stmt)]
    $default  reduce using rule 61 (Stmt)


State 182

   59 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA •

    $default  reduce using rule 59 (Stmt)


State 183

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA • Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA • RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA • Stmt
   60     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA •

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 187
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 60 (Stmt)]
    ID      [reduce using rule 60 (Stmt)]
    RBRA    [reduce using rule 60 (Stmt)]
    WRITE   [reduce using rule 60 (Stmt)]
    PRINT   [reduce using rule 60 (Stmt)]
    IF      [reduce using rule 60 (Stmt)]
    ELSE    reduce using rule 60 (Stmt)
    RETURN  [reduce using rule 60 (Stmt)]
    WHILE   [reduce using rule 60 (Stmt)]

    FuncCall  go to state 47
    Stmt      go to state 188
    Array     go to state 50


State 184

   58 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA •

    $default  reduce using rule 58 (Stmt)


State 185

   56 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt • RBRA

    RBRA  shift, and go to state 189


State 186

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt RBRA •

    $default  reduce using rule 52 (Stmt)


State 187

   51 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA RBRA •

    $default  reduce using rule 51 (Stmt)


State 188

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt • RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt •

    RBRA  shift, and go to state 190

    RBRA      [reduce using rule 57 (Stmt)]
    $default  reduce using rule 57 (Stmt)


State 189

   56 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA •

    $default  reduce using rule 56 (Stmt)


State 190

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt RBRA •

    $default  reduce using rule 50 (Stmt)
