Terminals unused in grammar

    END
    COLON
    INT
    FLOAT
    MULT


Rules useless in parser due to conflicts

   55 Stmt: IF LPAR Expr EQ Expr RPAR LBRA


State 1 conflicts: 1 reduce/reduce
State 10 conflicts: 1 reduce/reduce
State 18 conflicts: 1 reduce/reduce
State 27 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce
State 30 conflicts: 9 reduce/reduce
State 34 conflicts: 1 shift/reduce
State 52 conflicts: 8 reduce/reduce
State 71 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 133 conflicts: 18 shift/reduce
State 145 conflicts: 19 shift/reduce
State 147 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 162 conflicts: 9 shift/reduce
State 168 conflicts: 1 shift/reduce
State 172 conflicts: 2 shift/reduce
State 176 conflicts: 1 shift/reduce
State 185 conflicts: 7 shift/reduce
State 194 conflicts: 7 shift/reduce
State 197 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FuncDeclList MainFunc
    2        | error

    3 $@1: ε

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA

    5 Body: VarDeclList StmtList
    6     | error

    7 FuncDeclList: ε
    8             | FuncDecl FuncDeclList
    9             | error

   10 $@2: ε

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA
   12         | error

   13 FuncCall: ID LPAR ExprList RPAR

   14 ParamList: ε
   15          | ParamDecl
   16          | ParamDecl COMMA ParamList
   17          | error

   18 ParamDecl: TYPE ID
   19          | error

   20 VarDeclList: ε
   21            | VarDecl VarDeclList
   22            | error

   23 VarDecl: TYPE ID SEMICOLON
   24        | TYPE ID EQ Expr SEMICOLON
   25        | Array_Decl SEMICOLON
   26        | Array_Decl EQ LBRA ExprList RBRA SEMICOLON
   27        | TYPE ID
   28        | TYPE ID EQ Expr
   29        | TYPE NUMBER
   30        | error

   31 StmtList: ε
   32         | Stmt StmtList

   33 Stmt: ID EQ Expr SEMICOLON
   34     | ID EQ FuncCall SEMICOLON
   35     | FuncCall SEMICOLON
   36     | Array EQ Expr SEMICOLON
   37     | ID EQ Expr
   38     | WRITE Expr SEMICOLON
   39     | WRITE Expr
   40     | WRITE LPAR Expr RPAR SEMICOLON
   41     | WRITE Array SEMICOLON
   42     | WRITE LPAR Expr RPAR
   43     | PRINT Expr SEMICOLON
   44     | PRINT Expr
   45     | PRINT LPAR Expr RPAR SEMICOLON
   46     | PRINT LPAR Expr RPAR
   47     | IfStatements
   48     | IF LPAR Expr EQ Expr RPAR LBRA Stmt
   49     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr EQ Expr RPAR LBRA
   56     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA
   58     | WHILE LPAR Expr RPAR LBRA RBRA
   59     | WHILE LPAR Expr EQ Expr RPAR LBRA RBRA
   60     | WHILE LPAR Expr RPAR LBRA Stmt RBRA
   61     | WHILE LPAR Expr EQ Expr RPAR LBRA Stmt RBRA
   62     | RETURN LPAR Expr RPAR SEMICOLON
   63     | RETURN Expr SEMICOLON
   64     | error

   65 IfStatements: IF LPAR Expr RPAR LBRA Body RBRA
   66             | IF LPAR Expr RPAR LBRA Body RBRA ElseStatement
   67             | IF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements
   68             | IF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements ElseStatement

   69 ElseIfStatements: ELSEIF LPAR Expr RPAR LBRA Body RBRA
   70                 | ELSEIF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements

   71 ElseStatement: ELSE LBRA Body RBRA

   72 ExprList: Expr
   73         | Expr COMMA ExprList

   74 Expr: Expr BinOp Expr
   75     | LPAR Expr BinOp Expr RPAR
   76     | ID
   77     | NUMBER
   78     | DECIMAL_NUMBER
   79     | BOOL
   80     | STR
   81     | CHR
   82     | error

   83 Array_Decl: TYPE ID LBLO NUMBER RBLO
   84           | TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA

   85 Array: ID LBLO NUMBER RBLO

   86 BinOp: PLUS
   87      | MINUS
   88      | MUL
   89      | DIV
   90      | POW
   91      | FAC
   92      | FIB
   93      | PEQ
   94      | SEQ
   95      | MEQ
   96      | DEQ
   97      | DUP
   98      | NUP
   99      | GT
  100      | GTE
  101      | LT
  102      | LTE
  103      | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 6 9 12 17 19 22 30 64 82 103
    TYPE <string> (258) 11 18 23 24 27 28 29 83 84
    VOID <string> (259) 4
    FUNC_DECL <string> (260) 4 11
    MAIN <string> (261) 4
    BOOL <string> (262) 79
    ID <string> (263) 11 13 18 23 24 27 28 33 34 37 76 83 84 85
    NUMBER <number> (264) 29 77 83 84 85
    DECIMAL_NUMBER <float_number> (265) 78
    STR <string> (266) 80
    CHR <string> (267) 81
    END <string> (268)
    LPAR <char> (269) 4 11 13 40 42 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 65 66 67 68 69 70 75
    RPAR <char> (270) 4 11 13 40 42 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 65 66 67 68 69 70 75
    LBRA <char> (271) 4 11 26 48 49 50 51 52 53 54 55 56 57 58 59 60 61 65 66 67 68 69 70 71 84
    RBRA <char> (272) 4 11 26 49 50 51 52 53 54 56 57 58 59 60 61 65 66 67 68 69 70 71 84
    LBLO <char> (273) 83 84 85
    RBLO <char> (274) 83 84 85
    SEMICOLON <char> (275) 23 24 25 26 33 34 35 36 38 40 41 43 45 62 63
    COLON <char> (276)
    COMMA <char> (277) 16 73
    EQ <operator> (278) 24 26 28 33 34 36 37 48 49 50 51 52 53 54 55 56 57 59 61 84
    PEQ <operator> (279) 93
    SEQ <operator> (280) 94
    MEQ <operator> (281) 95
    DEQ <operator> (282) 96
    DUP <operator> (283) 97
    NUP <operator> (284) 98
    LT <operator> (285) 101
    LTE <operator> (286) 102
    GT <operator> (287) 99
    GTE <operator> (288) 100
    PLUS <operator> (289) 86
    MINUS <operator> (290) 87
    MUL <operator> (291) 88
    DIV <operator> (292) 89
    POW <operator> (293) 90
    FAC <operator> (294) 91
    FIB <operator> (295) 92
    WRITE <string> (296) 38 39 40 41 42
    PRINT <string> (297) 43 44 45 46
    IF <string> (298) 48 49 50 51 52 53 54 55 56 57 65 66 67 68
    ELSEIF <string> (299) 69 70
    ELSE <string> (300) 49 50 51 52 53 54 56 57 71
    RETURN <string> (301) 62 63
    WHILE <string> (302) 58 59 60 61
    INT <string> (303)
    FLOAT <string> (304)
    MULT (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast> (52)
        on left: 1 2
        on right: 0
    MainFunc <ast> (53)
        on left: 4
        on right: 1
    $@1 (54)
        on left: 3
        on right: 4
    Body <ast> (55)
        on left: 5 6
        on right: 4 11 65 66 67 68 69 70 71
    FuncDeclList <ast> (56)
        on left: 7 8 9
        on right: 1 8
    FuncDecl <ast> (57)
        on left: 11 12
        on right: 8
    $@2 (58)
        on left: 10
        on right: 11
    FuncCall <ast> (59)
        on left: 13
        on right: 34 35
    ParamList <ast> (60)
        on left: 14 15 16 17
        on right: 11 16
    ParamDecl <ast> (61)
        on left: 18 19
        on right: 15 16
    VarDeclList <ast> (62)
        on left: 20 21 22
        on right: 5 21
    VarDecl <ast> (63)
        on left: 23 24 25 26 27 28 29 30
        on right: 21
    StmtList <ast> (64)
        on left: 31 32
        on right: 5 32
    Stmt <ast> (65)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 32 48 49 50 51 52 53 54 60 61
    IfStatements <ast> (66)
        on left: 65 66 67 68
        on right: 47
    ElseIfStatements <ast> (67)
        on left: 69 70
        on right: 67 68 70
    ElseStatement <ast> (68)
        on left: 71
        on right: 66 68
    ExprList <ast> (69)
        on left: 72 73
        on right: 13 26 73 84
    Expr <ast> (70)
        on left: 74 75 76 77 78 79 80 81 82
        on right: 24 28 33 36 37 38 39 40 42 43 44 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 65 66 67 68 69 70 72 73 74 75
    Array_Decl <ast> (71)
        on left: 83 84
        on right: 25 26
    Array <ast> (72)
        on left: 85
        on right: 36 41
    BinOp <ast> (73)
        on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
        on right: 74 75


State 0

    0 $accept: • Program $end

    error      shift, and go to state 1
    FUNC_DECL  shift, and go to state 2

    VOID  reduce using rule 7 (FuncDeclList)

    Program       go to state 3
    FuncDeclList  go to state 4
    FuncDecl      go to state 5


State 1

    2 Program: error •
    9 FuncDeclList: error •
   12 FuncDecl: error •

    $end      reduce using rule 2 (Program)
    VOID      reduce using rule 9 (FuncDeclList)
    VOID      [reduce using rule 12 (FuncDecl)]
    $default  reduce using rule 12 (FuncDecl)


State 2

   11 FuncDecl: FUNC_DECL • TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA

    TYPE  shift, and go to state 6


State 3

    0 $accept: Program • $end

    $end  shift, and go to state 7


State 4

    1 Program: FuncDeclList • MainFunc

    VOID  shift, and go to state 8

    MainFunc  go to state 9


State 5

    8 FuncDeclList: FuncDecl • FuncDeclList

    error      shift, and go to state 10
    FUNC_DECL  shift, and go to state 2

    VOID  reduce using rule 7 (FuncDeclList)

    FuncDeclList  go to state 11
    FuncDecl      go to state 5


State 6

   11 FuncDecl: FUNC_DECL TYPE • ID $@2 LPAR ParamList RPAR LBRA Body RBRA

    ID  shift, and go to state 12


State 7

    0 $accept: Program $end •

    $default  accept


State 8

    4 MainFunc: VOID • FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA

    FUNC_DECL  shift, and go to state 13


State 9

    1 Program: FuncDeclList MainFunc •

    $default  reduce using rule 1 (Program)


State 10

    9 FuncDeclList: error •
   12 FuncDecl: error •

    VOID      reduce using rule 9 (FuncDeclList)
    VOID      [reduce using rule 12 (FuncDecl)]
    $default  reduce using rule 12 (FuncDecl)


State 11

    8 FuncDeclList: FuncDecl FuncDeclList •

    $default  reduce using rule 8 (FuncDeclList)


State 12

   11 FuncDecl: FUNC_DECL TYPE ID • $@2 LPAR ParamList RPAR LBRA Body RBRA

    $default  reduce using rule 10 ($@2)

    $@2  go to state 14


State 13

    4 MainFunc: VOID FUNC_DECL • MAIN $@1 LPAR RPAR LBRA Body RBRA

    MAIN  shift, and go to state 15


State 14

   11 FuncDecl: FUNC_DECL TYPE ID $@2 • LPAR ParamList RPAR LBRA Body RBRA

    LPAR  shift, and go to state 16


State 15

    4 MainFunc: VOID FUNC_DECL MAIN • $@1 LPAR RPAR LBRA Body RBRA

    $default  reduce using rule 3 ($@1)

    $@1  go to state 17


State 16

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR • ParamList RPAR LBRA Body RBRA

    error  shift, and go to state 18
    TYPE   shift, and go to state 19

    RPAR  reduce using rule 14 (ParamList)

    ParamList  go to state 20
    ParamDecl  go to state 21


State 17

    4 MainFunc: VOID FUNC_DECL MAIN $@1 • LPAR RPAR LBRA Body RBRA

    LPAR  shift, and go to state 22


State 18

   17 ParamList: error •
   19 ParamDecl: error •

    RPAR      reduce using rule 17 (ParamList)
    RPAR      [reduce using rule 19 (ParamDecl)]
    COMMA     reduce using rule 19 (ParamDecl)
    $default  reduce using rule 17 (ParamList)


State 19

   18 ParamDecl: TYPE • ID

    ID  shift, and go to state 23


State 20

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList • RPAR LBRA Body RBRA

    RPAR  shift, and go to state 24


State 21

   15 ParamList: ParamDecl •
   16          | ParamDecl • COMMA ParamList

    COMMA  shift, and go to state 25

    $default  reduce using rule 15 (ParamList)


State 22

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR • RPAR LBRA Body RBRA

    RPAR  shift, and go to state 26


State 23

   18 ParamDecl: TYPE ID •

    $default  reduce using rule 18 (ParamDecl)


State 24

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR • LBRA Body RBRA

    LBRA  shift, and go to state 27


State 25

   16 ParamList: ParamDecl COMMA • ParamList

    error  shift, and go to state 18
    TYPE   shift, and go to state 19

    RPAR  reduce using rule 14 (ParamList)

    ParamList  go to state 28
    ParamDecl  go to state 21


State 26

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR • LBRA Body RBRA

    LBRA  shift, and go to state 29


State 27

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA • Body RBRA

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 32
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 28

   16 ParamList: ParamDecl COMMA ParamList •

    $default  reduce using rule 16 (ParamList)


State 29

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA • Body RBRA

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 36
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 30

    6 Body: error •
   22 VarDeclList: error •
   30 VarDecl: error •

    error     reduce using rule 22 (VarDeclList)
    error     [reduce using rule 30 (VarDecl)]
    TYPE      reduce using rule 30 (VarDecl)
    ID        reduce using rule 22 (VarDeclList)
    ID        [reduce using rule 30 (VarDecl)]
    RBRA      reduce using rule 6 (Body)
    RBRA      [reduce using rule 22 (VarDeclList)]
    RBRA      [reduce using rule 30 (VarDecl)]
    WRITE     reduce using rule 22 (VarDeclList)
    WRITE     [reduce using rule 30 (VarDecl)]
    PRINT     reduce using rule 22 (VarDeclList)
    PRINT     [reduce using rule 30 (VarDecl)]
    IF        reduce using rule 22 (VarDeclList)
    IF        [reduce using rule 30 (VarDecl)]
    RETURN    reduce using rule 22 (VarDeclList)
    RETURN    [reduce using rule 30 (VarDecl)]
    WHILE     reduce using rule 22 (VarDeclList)
    WHILE     [reduce using rule 30 (VarDecl)]
    $default  reduce using rule 22 (VarDeclList)


State 31

   23 VarDecl: TYPE • ID SEMICOLON
   24        | TYPE • ID EQ Expr SEMICOLON
   27        | TYPE • ID
   28        | TYPE • ID EQ Expr
   29        | TYPE • NUMBER
   83 Array_Decl: TYPE • ID LBLO NUMBER RBLO
   84           | TYPE • ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 38


State 32

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body • RBRA

    RBRA  shift, and go to state 39


State 33

    5 Body: VarDeclList • StmtList

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    RBRA  reduce using rule 31 (StmtList)

    FuncCall      go to state 47
    StmtList      go to state 48
    Stmt          go to state 49
    IfStatements  go to state 50
    Array         go to state 51


State 34

   21 VarDeclList: VarDecl • VarDeclList

    error  shift, and go to state 52
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    VarDeclList  go to state 53
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 35

   25 VarDecl: Array_Decl • SEMICOLON
   26        | Array_Decl • EQ LBRA ExprList RBRA SEMICOLON

    SEMICOLON  shift, and go to state 54
    EQ         shift, and go to state 55


State 36

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body • RBRA

    RBRA  shift, and go to state 56


State 37

   23 VarDecl: TYPE ID • SEMICOLON
   24        | TYPE ID • EQ Expr SEMICOLON
   27        | TYPE ID •
   28        | TYPE ID • EQ Expr
   83 Array_Decl: TYPE ID • LBLO NUMBER RBLO
   84           | TYPE ID • LBLO NUMBER RBLO EQ LBRA ExprList RBRA

    LBLO       shift, and go to state 57
    SEMICOLON  shift, and go to state 58
    EQ         shift, and go to state 59

    $default  reduce using rule 27 (VarDecl)


State 38

   29 VarDecl: TYPE NUMBER •

    $default  reduce using rule 29 (VarDecl)


State 39

   11 FuncDecl: FUNC_DECL TYPE ID $@2 LPAR ParamList RPAR LBRA Body RBRA •

    $default  reduce using rule 11 (FuncDecl)


State 40

   64 Stmt: error •

    $default  reduce using rule 64 (Stmt)


State 41

   13 FuncCall: ID • LPAR ExprList RPAR
   33 Stmt: ID • EQ Expr SEMICOLON
   34     | ID • EQ FuncCall SEMICOLON
   37     | ID • EQ Expr
   85 Array: ID • LBLO NUMBER RBLO

    LPAR  shift, and go to state 60
    LBLO  shift, and go to state 61
    EQ    shift, and go to state 62


State 42

   38 Stmt: WRITE • Expr SEMICOLON
   39     | WRITE • Expr
   40     | WRITE • LPAR Expr RPAR SEMICOLON
   41     | WRITE • Array SEMICOLON
   42     | WRITE • LPAR Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 65
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 70

    Expr   go to state 71
    Array  go to state 72


State 43

   43 Stmt: PRINT • Expr SEMICOLON
   44     | PRINT • Expr
   45     | PRINT • LPAR Expr RPAR SEMICOLON
   46     | PRINT • LPAR Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 74

    Expr  go to state 75


State 44

   48 Stmt: IF • LPAR Expr EQ Expr RPAR LBRA Stmt
   49     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF • LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF • LPAR Expr EQ Expr RPAR LBRA
   56     | IF • LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   57     | IF • LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA
   65 IfStatements: IF • LPAR Expr RPAR LBRA Body RBRA
   66             | IF • LPAR Expr RPAR LBRA Body RBRA ElseStatement
   67             | IF • LPAR Expr RPAR LBRA Body RBRA ElseIfStatements
   68             | IF • LPAR Expr RPAR LBRA Body RBRA ElseIfStatements ElseStatement

    LPAR  shift, and go to state 76


State 45

   62 Stmt: RETURN • LPAR Expr RPAR SEMICOLON
   63     | RETURN • Expr SEMICOLON

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 77

    Expr  go to state 78


State 46

   58 Stmt: WHILE • LPAR Expr RPAR LBRA RBRA
   59     | WHILE • LPAR Expr EQ Expr RPAR LBRA RBRA
   60     | WHILE • LPAR Expr RPAR LBRA Stmt RBRA
   61     | WHILE • LPAR Expr EQ Expr RPAR LBRA Stmt RBRA

    LPAR  shift, and go to state 79


State 47

   35 Stmt: FuncCall • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 48

    5 Body: VarDeclList StmtList •

    $default  reduce using rule 5 (Body)


State 49

   32 StmtList: Stmt • StmtList

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    RBRA  reduce using rule 31 (StmtList)

    FuncCall      go to state 47
    StmtList      go to state 81
    Stmt          go to state 49
    IfStatements  go to state 50
    Array         go to state 51


State 50

   47 Stmt: IfStatements •

    $default  reduce using rule 47 (Stmt)


State 51

   36 Stmt: Array • EQ Expr SEMICOLON

    EQ  shift, and go to state 82


State 52

   22 VarDeclList: error •
   30 VarDecl: error •

    error     reduce using rule 22 (VarDeclList)
    error     [reduce using rule 30 (VarDecl)]
    TYPE      reduce using rule 30 (VarDecl)
    ID        reduce using rule 22 (VarDeclList)
    ID        [reduce using rule 30 (VarDecl)]
    RBRA      reduce using rule 22 (VarDeclList)
    RBRA      [reduce using rule 30 (VarDecl)]
    WRITE     reduce using rule 22 (VarDeclList)
    WRITE     [reduce using rule 30 (VarDecl)]
    PRINT     reduce using rule 22 (VarDeclList)
    PRINT     [reduce using rule 30 (VarDecl)]
    IF        reduce using rule 22 (VarDeclList)
    IF        [reduce using rule 30 (VarDecl)]
    RETURN    reduce using rule 22 (VarDeclList)
    RETURN    [reduce using rule 30 (VarDecl)]
    WHILE     reduce using rule 22 (VarDeclList)
    WHILE     [reduce using rule 30 (VarDecl)]
    $default  reduce using rule 22 (VarDeclList)


State 53

   21 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 21 (VarDeclList)


State 54

   25 VarDecl: Array_Decl SEMICOLON •

    $default  reduce using rule 25 (VarDecl)


State 55

   26 VarDecl: Array_Decl EQ • LBRA ExprList RBRA SEMICOLON

    LBRA  shift, and go to state 83


State 56

    4 MainFunc: VOID FUNC_DECL MAIN $@1 LPAR RPAR LBRA Body RBRA •

    $default  reduce using rule 4 (MainFunc)


State 57

   83 Array_Decl: TYPE ID LBLO • NUMBER RBLO
   84           | TYPE ID LBLO • NUMBER RBLO EQ LBRA ExprList RBRA

    NUMBER  shift, and go to state 84


State 58

   23 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 23 (VarDecl)


State 59

   24 VarDecl: TYPE ID EQ • Expr SEMICOLON
   28        | TYPE ID EQ • Expr

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 86


State 60

   13 FuncCall: ID LPAR • ExprList RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    ExprList  go to state 87
    Expr      go to state 88


State 61

   85 Array: ID LBLO • NUMBER RBLO

    NUMBER  shift, and go to state 89


State 62

   33 Stmt: ID EQ • Expr SEMICOLON
   34     | ID EQ • FuncCall SEMICOLON
   37     | ID EQ • Expr

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 90
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    FuncCall  go to state 91
    Expr      go to state 92


State 63

   82 Expr: error •

    $default  reduce using rule 82 (Expr)


State 64

   79 Expr: BOOL •

    $default  reduce using rule 79 (Expr)


State 65

   76 Expr: ID •
   85 Array: ID • LBLO NUMBER RBLO

    LBLO  shift, and go to state 61

    $default  reduce using rule 76 (Expr)


State 66

   77 Expr: NUMBER •

    $default  reduce using rule 77 (Expr)


State 67

   78 Expr: DECIMAL_NUMBER •

    $default  reduce using rule 78 (Expr)


State 68

   80 Expr: STR •

    $default  reduce using rule 80 (Expr)


State 69

   81 Expr: CHR •

    $default  reduce using rule 81 (Expr)


State 70

   40 Stmt: WRITE LPAR • Expr RPAR SEMICOLON
   42     | WRITE LPAR • Expr RPAR
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 93


State 71

   38 Stmt: WRITE Expr • SEMICOLON
   39     | WRITE Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 95
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    error   [reduce using rule 39 (Stmt)]
    ID      reduce using rule 39 (Stmt)
    RBRA    reduce using rule 39 (Stmt)
    WRITE   reduce using rule 39 (Stmt)
    PRINT   reduce using rule 39 (Stmt)
    IF      reduce using rule 39 (Stmt)
    ELSE    reduce using rule 39 (Stmt)
    RETURN  reduce using rule 39 (Stmt)
    WHILE   reduce using rule 39 (Stmt)

    BinOp  go to state 113


State 72

   41 Stmt: WRITE Array • SEMICOLON

    SEMICOLON  shift, and go to state 114


State 73

   76 Expr: ID •

    $default  reduce using rule 76 (Expr)


State 74

   45 Stmt: PRINT LPAR • Expr RPAR SEMICOLON
   46     | PRINT LPAR • Expr RPAR
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 115


State 75

   43 Stmt: PRINT Expr • SEMICOLON
   44     | PRINT Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 116
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    error   [reduce using rule 44 (Stmt)]
    ID      reduce using rule 44 (Stmt)
    RBRA    reduce using rule 44 (Stmt)
    WRITE   reduce using rule 44 (Stmt)
    PRINT   reduce using rule 44 (Stmt)
    IF      reduce using rule 44 (Stmt)
    ELSE    reduce using rule 44 (Stmt)
    RETURN  reduce using rule 44 (Stmt)
    WHILE   reduce using rule 44 (Stmt)

    BinOp  go to state 113


State 76

   48 Stmt: IF LPAR • Expr EQ Expr RPAR LBRA Stmt
   49     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR • Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR • Expr EQ Expr RPAR LBRA
   56     | IF LPAR • Expr EQ Expr RPAR LBRA ELSE LBRA RBRA
   57     | IF LPAR • Expr EQ Expr RPAR LBRA RBRA ELSE LBRA
   65 IfStatements: IF LPAR • Expr RPAR LBRA Body RBRA
   66             | IF LPAR • Expr RPAR LBRA Body RBRA ElseStatement
   67             | IF LPAR • Expr RPAR LBRA Body RBRA ElseIfStatements
   68             | IF LPAR • Expr RPAR LBRA Body RBRA ElseIfStatements ElseStatement

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 117


State 77

   62 Stmt: RETURN LPAR • Expr RPAR SEMICOLON
   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 118


State 78

   63 Stmt: RETURN Expr • SEMICOLON
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 119
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    BinOp  go to state 113


State 79

   58 Stmt: WHILE LPAR • Expr RPAR LBRA RBRA
   59     | WHILE LPAR • Expr EQ Expr RPAR LBRA RBRA
   60     | WHILE LPAR • Expr RPAR LBRA Stmt RBRA
   61     | WHILE LPAR • Expr EQ Expr RPAR LBRA Stmt RBRA

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 120


State 80

   35 Stmt: FuncCall SEMICOLON •

    $default  reduce using rule 35 (Stmt)


State 81

   32 StmtList: Stmt StmtList •

    $default  reduce using rule 32 (StmtList)


State 82

   36 Stmt: Array EQ • Expr SEMICOLON

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 121


State 83

   26 VarDecl: Array_Decl EQ LBRA • ExprList RBRA SEMICOLON

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    ExprList  go to state 122
    Expr      go to state 88


State 84

   83 Array_Decl: TYPE ID LBLO NUMBER • RBLO
   84           | TYPE ID LBLO NUMBER • RBLO EQ LBRA ExprList RBRA

    RBLO  shift, and go to state 123


State 85

   75 Expr: LPAR • Expr BinOp Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 124


State 86

   24 VarDecl: TYPE ID EQ Expr • SEMICOLON
   28        | TYPE ID EQ Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 125
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    error   [reduce using rule 28 (VarDecl)]
    TYPE    reduce using rule 28 (VarDecl)
    ID      reduce using rule 28 (VarDecl)
    RBRA    reduce using rule 28 (VarDecl)
    WRITE   reduce using rule 28 (VarDecl)
    PRINT   reduce using rule 28 (VarDecl)
    IF      reduce using rule 28 (VarDecl)
    RETURN  reduce using rule 28 (VarDecl)
    WHILE   reduce using rule 28 (VarDecl)

    BinOp  go to state 113


State 87

   13 FuncCall: ID LPAR ExprList • RPAR

    RPAR  shift, and go to state 126


State 88

   72 ExprList: Expr •
   73         | Expr • COMMA ExprList
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    COMMA  shift, and go to state 127
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    RPAR  reduce using rule 72 (ExprList)
    RBRA  reduce using rule 72 (ExprList)

    BinOp  go to state 113


State 89

   85 Array: ID LBLO NUMBER • RBLO

    RBLO  shift, and go to state 128


State 90

   13 FuncCall: ID • LPAR ExprList RPAR
   76 Expr: ID •

    LPAR  shift, and go to state 60

    $default  reduce using rule 76 (Expr)


State 91

   34 Stmt: ID EQ FuncCall • SEMICOLON

    SEMICOLON  shift, and go to state 129


State 92

   33 Stmt: ID EQ Expr • SEMICOLON
   37     | ID EQ Expr •
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 130
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    error   [reduce using rule 37 (Stmt)]
    ID      reduce using rule 37 (Stmt)
    RBRA    reduce using rule 37 (Stmt)
    WRITE   reduce using rule 37 (Stmt)
    PRINT   reduce using rule 37 (Stmt)
    IF      reduce using rule 37 (Stmt)
    ELSE    reduce using rule 37 (Stmt)
    RETURN  reduce using rule 37 (Stmt)
    WHILE   reduce using rule 37 (Stmt)

    BinOp  go to state 113


State 93

   40 Stmt: WRITE LPAR Expr • RPAR SEMICOLON
   42     | WRITE LPAR Expr • RPAR
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 94
    RPAR   shift, and go to state 131
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 132


State 94

  103 BinOp: error •

    $default  reduce using rule 103 (BinOp)


State 95

   38 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 38 (Stmt)


State 96

   93 BinOp: PEQ •

    $default  reduce using rule 93 (BinOp)


State 97

   94 BinOp: SEQ •

    $default  reduce using rule 94 (BinOp)


State 98

   95 BinOp: MEQ •

    $default  reduce using rule 95 (BinOp)


State 99

   96 BinOp: DEQ •

    $default  reduce using rule 96 (BinOp)


State 100

   97 BinOp: DUP •

    $default  reduce using rule 97 (BinOp)


State 101

   98 BinOp: NUP •

    $default  reduce using rule 98 (BinOp)


State 102

  101 BinOp: LT •

    $default  reduce using rule 101 (BinOp)


State 103

  102 BinOp: LTE •

    $default  reduce using rule 102 (BinOp)


State 104

   99 BinOp: GT •

    $default  reduce using rule 99 (BinOp)


State 105

  100 BinOp: GTE •

    $default  reduce using rule 100 (BinOp)


State 106

   86 BinOp: PLUS •

    $default  reduce using rule 86 (BinOp)


State 107

   87 BinOp: MINUS •

    $default  reduce using rule 87 (BinOp)


State 108

   88 BinOp: MUL •

    $default  reduce using rule 88 (BinOp)


State 109

   89 BinOp: DIV •

    $default  reduce using rule 89 (BinOp)


State 110

   90 BinOp: POW •

    $default  reduce using rule 90 (BinOp)


State 111

   91 BinOp: FAC •

    $default  reduce using rule 91 (BinOp)


State 112

   92 BinOp: FIB •

    $default  reduce using rule 92 (BinOp)


State 113

   74 Expr: Expr BinOp • Expr

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 133


State 114

   41 Stmt: WRITE Array SEMICOLON •

    $default  reduce using rule 41 (Stmt)


State 115

   45 Stmt: PRINT LPAR Expr • RPAR SEMICOLON
   46     | PRINT LPAR Expr • RPAR
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 94
    RPAR   shift, and go to state 134
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 132


State 116

   43 Stmt: PRINT Expr SEMICOLON •

    $default  reduce using rule 43 (Stmt)


State 117

   48 Stmt: IF LPAR Expr • EQ Expr RPAR LBRA Stmt
   49     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr • EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr • EQ Expr RPAR LBRA
   56     | IF LPAR Expr • EQ Expr RPAR LBRA ELSE LBRA RBRA
   57     | IF LPAR Expr • EQ Expr RPAR LBRA RBRA ELSE LBRA
   65 IfStatements: IF LPAR Expr • RPAR LBRA Body RBRA
   66             | IF LPAR Expr • RPAR LBRA Body RBRA ElseStatement
   67             | IF LPAR Expr • RPAR LBRA Body RBRA ElseIfStatements
   68             | IF LPAR Expr • RPAR LBRA Body RBRA ElseIfStatements ElseStatement
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    RPAR   shift, and go to state 135
    EQ     shift, and go to state 136
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 113


State 118

   62 Stmt: RETURN LPAR Expr • RPAR SEMICOLON
   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 94
    RPAR   shift, and go to state 137
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 132


State 119

   63 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 63 (Stmt)


State 120

   58 Stmt: WHILE LPAR Expr • RPAR LBRA RBRA
   59     | WHILE LPAR Expr • EQ Expr RPAR LBRA RBRA
   60     | WHILE LPAR Expr • RPAR LBRA Stmt RBRA
   61     | WHILE LPAR Expr • EQ Expr RPAR LBRA Stmt RBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    RPAR   shift, and go to state 138
    EQ     shift, and go to state 139
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 113


State 121

   36 Stmt: Array EQ Expr • SEMICOLON
   74 Expr: Expr • BinOp Expr

    error      shift, and go to state 94
    SEMICOLON  shift, and go to state 140
    PEQ        shift, and go to state 96
    SEQ        shift, and go to state 97
    MEQ        shift, and go to state 98
    DEQ        shift, and go to state 99
    DUP        shift, and go to state 100
    NUP        shift, and go to state 101
    LT         shift, and go to state 102
    LTE        shift, and go to state 103
    GT         shift, and go to state 104
    GTE        shift, and go to state 105
    PLUS       shift, and go to state 106
    MINUS      shift, and go to state 107
    MUL        shift, and go to state 108
    DIV        shift, and go to state 109
    POW        shift, and go to state 110
    FAC        shift, and go to state 111
    FIB        shift, and go to state 112

    BinOp  go to state 113


State 122

   26 VarDecl: Array_Decl EQ LBRA ExprList • RBRA SEMICOLON

    RBRA  shift, and go to state 141


State 123

   83 Array_Decl: TYPE ID LBLO NUMBER RBLO •
   84           | TYPE ID LBLO NUMBER RBLO • EQ LBRA ExprList RBRA

    EQ  shift, and go to state 142

    EQ        [reduce using rule 83 (Array_Decl)]
    $default  reduce using rule 83 (Array_Decl)


State 124

   74 Expr: Expr • BinOp Expr
   75     | LPAR Expr • BinOp Expr RPAR

    error  shift, and go to state 94
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 132


State 125

   24 VarDecl: TYPE ID EQ Expr SEMICOLON •

    $default  reduce using rule 24 (VarDecl)


State 126

   13 FuncCall: ID LPAR ExprList RPAR •

    $default  reduce using rule 13 (FuncCall)


State 127

   73 ExprList: Expr COMMA • ExprList

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    ExprList  go to state 143
    Expr      go to state 88


State 128

   85 Array: ID LBLO NUMBER RBLO •

    $default  reduce using rule 85 (Array)


State 129

   34 Stmt: ID EQ FuncCall SEMICOLON •

    $default  reduce using rule 34 (Stmt)


State 130

   33 Stmt: ID EQ Expr SEMICOLON •

    $default  reduce using rule 33 (Stmt)


State 131

   40 Stmt: WRITE LPAR Expr RPAR • SEMICOLON
   42     | WRITE LPAR Expr RPAR •

    SEMICOLON  shift, and go to state 144

    $default  reduce using rule 42 (Stmt)


State 132

   74 Expr: Expr BinOp • Expr
   75     | LPAR Expr BinOp • Expr RPAR

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 145


State 133

   74 Expr: Expr • BinOp Expr
   74     | Expr BinOp Expr •

    error  shift, and go to state 94
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    error      [reduce using rule 74 (Expr)]
    TYPE       reduce using rule 74 (Expr)
    ID         reduce using rule 74 (Expr)
    RPAR       reduce using rule 74 (Expr)
    RBRA       reduce using rule 74 (Expr)
    SEMICOLON  reduce using rule 74 (Expr)
    COMMA      reduce using rule 74 (Expr)
    EQ         reduce using rule 74 (Expr)
    PEQ        [reduce using rule 74 (Expr)]
    SEQ        [reduce using rule 74 (Expr)]
    MEQ        [reduce using rule 74 (Expr)]
    DEQ        [reduce using rule 74 (Expr)]
    DUP        [reduce using rule 74 (Expr)]
    NUP        [reduce using rule 74 (Expr)]
    LT         [reduce using rule 74 (Expr)]
    LTE        [reduce using rule 74 (Expr)]
    GT         [reduce using rule 74 (Expr)]
    GTE        [reduce using rule 74 (Expr)]
    PLUS       [reduce using rule 74 (Expr)]
    MINUS      [reduce using rule 74 (Expr)]
    MUL        [reduce using rule 74 (Expr)]
    DIV        [reduce using rule 74 (Expr)]
    POW        [reduce using rule 74 (Expr)]
    FAC        [reduce using rule 74 (Expr)]
    FIB        [reduce using rule 74 (Expr)]
    WRITE      reduce using rule 74 (Expr)
    PRINT      reduce using rule 74 (Expr)
    IF         reduce using rule 74 (Expr)
    ELSE       reduce using rule 74 (Expr)
    RETURN     reduce using rule 74 (Expr)
    WHILE      reduce using rule 74 (Expr)

    BinOp  go to state 113


State 134

   45 Stmt: PRINT LPAR Expr RPAR • SEMICOLON
   46     | PRINT LPAR Expr RPAR •

    SEMICOLON  shift, and go to state 146

    $default  reduce using rule 46 (Stmt)


State 135

   65 IfStatements: IF LPAR Expr RPAR • LBRA Body RBRA
   66             | IF LPAR Expr RPAR • LBRA Body RBRA ElseStatement
   67             | IF LPAR Expr RPAR • LBRA Body RBRA ElseIfStatements
   68             | IF LPAR Expr RPAR • LBRA Body RBRA ElseIfStatements ElseStatement

    LBRA  shift, and go to state 147


State 136

   48 Stmt: IF LPAR Expr EQ • Expr RPAR LBRA Stmt
   49     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr EQ • Expr RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr EQ • Expr RPAR LBRA
   56     | IF LPAR Expr EQ • Expr RPAR LBRA ELSE LBRA RBRA
   57     | IF LPAR Expr EQ • Expr RPAR LBRA RBRA ELSE LBRA

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 148


State 137

   62 Stmt: RETURN LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 149


State 138

   58 Stmt: WHILE LPAR Expr RPAR • LBRA RBRA
   60     | WHILE LPAR Expr RPAR • LBRA Stmt RBRA

    LBRA  shift, and go to state 150


State 139

   59 Stmt: WHILE LPAR Expr EQ • Expr RPAR LBRA RBRA
   61     | WHILE LPAR Expr EQ • Expr RPAR LBRA Stmt RBRA

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 151


State 140

   36 Stmt: Array EQ Expr SEMICOLON •

    $default  reduce using rule 36 (Stmt)


State 141

   26 VarDecl: Array_Decl EQ LBRA ExprList RBRA • SEMICOLON

    SEMICOLON  shift, and go to state 152


State 142

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ • LBRA ExprList RBRA

    LBRA  shift, and go to state 153


State 143

   73 ExprList: Expr COMMA ExprList •

    $default  reduce using rule 73 (ExprList)


State 144

   40 Stmt: WRITE LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 40 (Stmt)


State 145

   74 Expr: Expr • BinOp Expr
   74     | Expr BinOp Expr •
   75     | LPAR Expr BinOp Expr • RPAR

    error  shift, and go to state 94
    RPAR   shift, and go to state 154
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    error  [reduce using rule 74 (Expr)]
    RPAR   [reduce using rule 74 (Expr)]
    PEQ    [reduce using rule 74 (Expr)]
    SEQ    [reduce using rule 74 (Expr)]
    MEQ    [reduce using rule 74 (Expr)]
    DEQ    [reduce using rule 74 (Expr)]
    DUP    [reduce using rule 74 (Expr)]
    NUP    [reduce using rule 74 (Expr)]
    LT     [reduce using rule 74 (Expr)]
    LTE    [reduce using rule 74 (Expr)]
    GT     [reduce using rule 74 (Expr)]
    GTE    [reduce using rule 74 (Expr)]
    PLUS   [reduce using rule 74 (Expr)]
    MINUS  [reduce using rule 74 (Expr)]
    MUL    [reduce using rule 74 (Expr)]
    DIV    [reduce using rule 74 (Expr)]
    POW    [reduce using rule 74 (Expr)]
    FAC    [reduce using rule 74 (Expr)]
    FIB    [reduce using rule 74 (Expr)]

    BinOp  go to state 113


State 146

   45 Stmt: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 45 (Stmt)


State 147

   65 IfStatements: IF LPAR Expr RPAR LBRA • Body RBRA
   66             | IF LPAR Expr RPAR LBRA • Body RBRA ElseStatement
   67             | IF LPAR Expr RPAR LBRA • Body RBRA ElseIfStatements
   68             | IF LPAR Expr RPAR LBRA • Body RBRA ElseIfStatements ElseStatement

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 155
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 148

   48 Stmt: IF LPAR Expr EQ Expr • RPAR LBRA Stmt
   49     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr • RPAR LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr EQ Expr • RPAR LBRA
   56     | IF LPAR Expr EQ Expr • RPAR LBRA ELSE LBRA RBRA
   57     | IF LPAR Expr EQ Expr • RPAR LBRA RBRA ELSE LBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    RPAR   shift, and go to state 156
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 113


State 149

   62 Stmt: RETURN LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 62 (Stmt)


State 150

   58 Stmt: WHILE LPAR Expr RPAR LBRA • RBRA
   60     | WHILE LPAR Expr RPAR LBRA • Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 157
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall      go to state 47
    Stmt          go to state 158
    IfStatements  go to state 50
    Array         go to state 51


State 151

   59 Stmt: WHILE LPAR Expr EQ Expr • RPAR LBRA RBRA
   61     | WHILE LPAR Expr EQ Expr • RPAR LBRA Stmt RBRA
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    RPAR   shift, and go to state 159
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 113


State 152

   26 VarDecl: Array_Decl EQ LBRA ExprList RBRA SEMICOLON •

    $default  reduce using rule 26 (VarDecl)


State 153

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA • ExprList RBRA

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    ExprList  go to state 160
    Expr      go to state 88


State 154

   75 Expr: LPAR Expr BinOp Expr RPAR •

    $default  reduce using rule 75 (Expr)


State 155

   65 IfStatements: IF LPAR Expr RPAR LBRA Body • RBRA
   66             | IF LPAR Expr RPAR LBRA Body • RBRA ElseStatement
   67             | IF LPAR Expr RPAR LBRA Body • RBRA ElseIfStatements
   68             | IF LPAR Expr RPAR LBRA Body • RBRA ElseIfStatements ElseStatement

    RBRA  shift, and go to state 161


State 156

   48 Stmt: IF LPAR Expr EQ Expr RPAR • LBRA Stmt
   49     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR • LBRA ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr EQ Expr RPAR • LBRA
   56     | IF LPAR Expr EQ Expr RPAR • LBRA ELSE LBRA RBRA
   57     | IF LPAR Expr EQ Expr RPAR • LBRA RBRA ELSE LBRA

    LBRA  shift, and go to state 162


State 157

   58 Stmt: WHILE LPAR Expr RPAR LBRA RBRA •

    $default  reduce using rule 58 (Stmt)


State 158

   60 Stmt: WHILE LPAR Expr RPAR LBRA Stmt • RBRA

    RBRA  shift, and go to state 163


State 159

   59 Stmt: WHILE LPAR Expr EQ Expr RPAR • LBRA RBRA
   61     | WHILE LPAR Expr EQ Expr RPAR • LBRA Stmt RBRA

    LBRA  shift, and go to state 164


State 160

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList • RBRA

    RBRA  shift, and go to state 165


State 161

   65 IfStatements: IF LPAR Expr RPAR LBRA Body RBRA •
   66             | IF LPAR Expr RPAR LBRA Body RBRA • ElseStatement
   67             | IF LPAR Expr RPAR LBRA Body RBRA • ElseIfStatements
   68             | IF LPAR Expr RPAR LBRA Body RBRA • ElseIfStatements ElseStatement

    ELSEIF  shift, and go to state 166
    ELSE    shift, and go to state 167

    ELSE      [reduce using rule 65 (IfStatements)]
    $default  reduce using rule 65 (IfStatements)

    ElseIfStatements  go to state 168
    ElseStatement     go to state 169


State 162

   48 Stmt: IF LPAR Expr EQ Expr RPAR LBRA • Stmt
   49     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt ELSE LBRA RBRA
   52     | IF LPAR Expr EQ Expr RPAR LBRA • ELSE LBRA Stmt RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA ELSE LBRA
   54     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA Stmt
   55     | IF LPAR Expr EQ Expr RPAR LBRA •
   56     | IF LPAR Expr EQ Expr RPAR LBRA • ELSE LBRA RBRA
   57     | IF LPAR Expr EQ Expr RPAR LBRA • RBRA ELSE LBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 170
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    ELSE    shift, and go to state 171
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 55 (Stmt)]
    ID      [reduce using rule 55 (Stmt)]
    RBRA    [reduce using rule 55 (Stmt)]
    WRITE   [reduce using rule 55 (Stmt)]
    PRINT   [reduce using rule 55 (Stmt)]
    IF      [reduce using rule 55 (Stmt)]
    ELSE    [reduce using rule 55 (Stmt)]
    RETURN  [reduce using rule 55 (Stmt)]
    WHILE   [reduce using rule 55 (Stmt)]

    FuncCall      go to state 47
    Stmt          go to state 172
    IfStatements  go to state 50
    Array         go to state 51


State 163

   60 Stmt: WHILE LPAR Expr RPAR LBRA Stmt RBRA •

    $default  reduce using rule 60 (Stmt)


State 164

   59 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA • RBRA
   61     | WHILE LPAR Expr EQ Expr RPAR LBRA • Stmt RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 173
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall      go to state 47
    Stmt          go to state 174
    IfStatements  go to state 50
    Array         go to state 51


State 165

   84 Array_Decl: TYPE ID LBLO NUMBER RBLO EQ LBRA ExprList RBRA •

    $default  reduce using rule 84 (Array_Decl)


State 166

   69 ElseIfStatements: ELSEIF • LPAR Expr RPAR LBRA Body RBRA
   70                 | ELSEIF • LPAR Expr RPAR LBRA Body RBRA ElseIfStatements

    LPAR  shift, and go to state 175


State 167

   71 ElseStatement: ELSE • LBRA Body RBRA

    LBRA  shift, and go to state 176


State 168

   67 IfStatements: IF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements •
   68             | IF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements • ElseStatement

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 67 (IfStatements)]
    $default  reduce using rule 67 (IfStatements)

    ElseStatement  go to state 177


State 169

   66 IfStatements: IF LPAR Expr RPAR LBRA Body RBRA ElseStatement •

    $default  reduce using rule 66 (IfStatements)


State 170

   54 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA Stmt
   57     | IF LPAR Expr EQ Expr RPAR LBRA RBRA • ELSE LBRA

    ELSE  shift, and go to state 178


State 171

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE • LBRA Stmt RBRA
   56     | IF LPAR Expr EQ Expr RPAR LBRA ELSE • LBRA RBRA

    LBRA  shift, and go to state 179


State 172

   48 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt •
   49     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • ELSE LBRA Stmt RBRA
   50     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA Stmt
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • ELSE LBRA RBRA
   53     | IF LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA ELSE LBRA

    RBRA  shift, and go to state 180
    ELSE  shift, and go to state 181

    RBRA      [reduce using rule 48 (Stmt)]
    ELSE      [reduce using rule 48 (Stmt)]
    $default  reduce using rule 48 (Stmt)


State 173

   59 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA RBRA •

    $default  reduce using rule 59 (Stmt)


State 174

   61 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA Stmt • RBRA

    RBRA  shift, and go to state 182


State 175

   69 ElseIfStatements: ELSEIF LPAR • Expr RPAR LBRA Body RBRA
   70                 | ELSEIF LPAR • Expr RPAR LBRA Body RBRA ElseIfStatements

    error           shift, and go to state 63
    BOOL            shift, and go to state 64
    ID              shift, and go to state 73
    NUMBER          shift, and go to state 66
    DECIMAL_NUMBER  shift, and go to state 67
    STR             shift, and go to state 68
    CHR             shift, and go to state 69
    LPAR            shift, and go to state 85

    Expr  go to state 183


State 176

   71 ElseStatement: ELSE LBRA • Body RBRA

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 184
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 177

   68 IfStatements: IF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements ElseStatement •

    $default  reduce using rule 68 (IfStatements)


State 178

   54 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA Stmt
   57     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE • LBRA

    LBRA  shift, and go to state 185


State 179

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA • Stmt RBRA
   56     | IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA • RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 186
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall      go to state 47
    Stmt          go to state 187
    IfStatements  go to state 50
    Array         go to state 51


State 180

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA Stmt
   53     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA • ELSE LBRA

    ELSE  shift, and go to state 188


State 181

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE • LBRA Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE • LBRA RBRA

    LBRA  shift, and go to state 189


State 182

   61 Stmt: WHILE LPAR Expr EQ Expr RPAR LBRA Stmt RBRA •

    $default  reduce using rule 61 (Stmt)


State 183

   69 ElseIfStatements: ELSEIF LPAR Expr • RPAR LBRA Body RBRA
   70                 | ELSEIF LPAR Expr • RPAR LBRA Body RBRA ElseIfStatements
   74 Expr: Expr • BinOp Expr

    error  shift, and go to state 94
    RPAR   shift, and go to state 190
    PEQ    shift, and go to state 96
    SEQ    shift, and go to state 97
    MEQ    shift, and go to state 98
    DEQ    shift, and go to state 99
    DUP    shift, and go to state 100
    NUP    shift, and go to state 101
    LT     shift, and go to state 102
    LTE    shift, and go to state 103
    GT     shift, and go to state 104
    GTE    shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    POW    shift, and go to state 110
    FAC    shift, and go to state 111
    FIB    shift, and go to state 112

    BinOp  go to state 113


State 184

   71 ElseStatement: ELSE LBRA Body • RBRA

    RBRA  shift, and go to state 191


State 185

   54 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA • Stmt
   57     | IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA •

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 57 (Stmt)]
    ID      [reduce using rule 57 (Stmt)]
    RBRA    reduce using rule 57 (Stmt)
    WRITE   [reduce using rule 57 (Stmt)]
    PRINT   [reduce using rule 57 (Stmt)]
    IF      [reduce using rule 57 (Stmt)]
    ELSE    reduce using rule 57 (Stmt)
    RETURN  [reduce using rule 57 (Stmt)]
    WHILE   [reduce using rule 57 (Stmt)]

    FuncCall      go to state 47
    Stmt          go to state 192
    IfStatements  go to state 50
    Array         go to state 51


State 186

   56 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA RBRA •

    $default  reduce using rule 56 (Stmt)


State 187

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt • RBRA

    RBRA  shift, and go to state 193


State 188

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA Stmt
   53     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE • LBRA

    LBRA  shift, and go to state 194


State 189

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA • Stmt RBRA
   51     | IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA • RBRA

    error   shift, and go to state 40
    ID      shift, and go to state 41
    RBRA    shift, and go to state 195
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    FuncCall      go to state 47
    Stmt          go to state 196
    IfStatements  go to state 50
    Array         go to state 51


State 190

   69 ElseIfStatements: ELSEIF LPAR Expr RPAR • LBRA Body RBRA
   70                 | ELSEIF LPAR Expr RPAR • LBRA Body RBRA ElseIfStatements

    LBRA  shift, and go to state 197


State 191

   71 ElseStatement: ELSE LBRA Body RBRA •

    $default  reduce using rule 71 (ElseStatement)


State 192

   54 Stmt: IF LPAR Expr EQ Expr RPAR LBRA RBRA ELSE LBRA Stmt •

    $default  reduce using rule 54 (Stmt)


State 193

   52 Stmt: IF LPAR Expr EQ Expr RPAR LBRA ELSE LBRA Stmt RBRA •

    $default  reduce using rule 52 (Stmt)


State 194

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA • Stmt
   53     | IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA •

    error   shift, and go to state 40
    ID      shift, and go to state 41
    WRITE   shift, and go to state 42
    PRINT   shift, and go to state 43
    IF      shift, and go to state 44
    RETURN  shift, and go to state 45
    WHILE   shift, and go to state 46

    error   [reduce using rule 53 (Stmt)]
    ID      [reduce using rule 53 (Stmt)]
    RBRA    reduce using rule 53 (Stmt)
    WRITE   [reduce using rule 53 (Stmt)]
    PRINT   [reduce using rule 53 (Stmt)]
    IF      [reduce using rule 53 (Stmt)]
    ELSE    reduce using rule 53 (Stmt)
    RETURN  [reduce using rule 53 (Stmt)]
    WHILE   [reduce using rule 53 (Stmt)]

    FuncCall      go to state 47
    Stmt          go to state 198
    IfStatements  go to state 50
    Array         go to state 51


State 195

   51 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA RBRA •

    $default  reduce using rule 51 (Stmt)


State 196

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt • RBRA

    RBRA  shift, and go to state 199


State 197

   69 ElseIfStatements: ELSEIF LPAR Expr RPAR LBRA • Body RBRA
   70                 | ELSEIF LPAR Expr RPAR LBRA • Body RBRA ElseIfStatements

    error  shift, and go to state 30
    TYPE   shift, and go to state 31

    error   [reduce using rule 20 (VarDeclList)]
    ID      reduce using rule 20 (VarDeclList)
    RBRA    reduce using rule 20 (VarDeclList)
    WRITE   reduce using rule 20 (VarDeclList)
    PRINT   reduce using rule 20 (VarDeclList)
    IF      reduce using rule 20 (VarDeclList)
    RETURN  reduce using rule 20 (VarDeclList)
    WHILE   reduce using rule 20 (VarDeclList)

    Body         go to state 200
    VarDeclList  go to state 33
    VarDecl      go to state 34
    Array_Decl   go to state 35


State 198

   50 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt RBRA ELSE LBRA Stmt •

    $default  reduce using rule 50 (Stmt)


State 199

   49 Stmt: IF LPAR Expr EQ Expr RPAR LBRA Stmt ELSE LBRA Stmt RBRA •

    $default  reduce using rule 49 (Stmt)


State 200

   69 ElseIfStatements: ELSEIF LPAR Expr RPAR LBRA Body • RBRA
   70                 | ELSEIF LPAR Expr RPAR LBRA Body • RBRA ElseIfStatements

    RBRA  shift, and go to state 201


State 201

   69 ElseIfStatements: ELSEIF LPAR Expr RPAR LBRA Body RBRA •
   70                 | ELSEIF LPAR Expr RPAR LBRA Body RBRA • ElseIfStatements

    ELSEIF  shift, and go to state 166

    $default  reduce using rule 69 (ElseIfStatements)

    ElseIfStatements  go to state 202


State 202

   70 ElseIfStatements: ELSEIF LPAR Expr RPAR LBRA Body RBRA ElseIfStatements •

    $default  reduce using rule 70 (ElseIfStatements)
